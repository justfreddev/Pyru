// Appends an incrementing number to the list and prints it out each time
var items = [];
for (var i = 0; i < 1000; i++) {
  items.push(i);
  print items;
}

// Prints 4 4
var items = ["apple", "banana", "cherry", "pineapple"];
print items.index("pineapple") + 1;
print items.len();

// All print ["apple", "banana", "cherry", "pineapple"]
var items = ["banana", "cherry", "pineapple"];
items.insertAt(0, "apple");
print items;

var items = ["apple", "banana", "cherry", "orange", "pineapple"];
items.remove(3);
print items;

var items = ["apple", "banana", "cherry", "pineapple", "tomato"];
items.pop();
print items;

var items = ["apple", "banana", "cherry"];
items.push("pineapple");
print items;


// Prints apple banana cherry
var items = ["apple", "banana", "cherry"];
for (var i = 0; i < 3; i++) {
  print items[i];
}


// Prints [1, 2]
var list = [1, 2, 3];
print list[:1];

// Prints [2, 3]
var list = [1, 2, 3];
print list[1:];


// Prints [1, 2, 3]
var list = [1, 2, 3];
print list[0:2];


// Prints [1, 2, 3, true]
var a = 3;
var list = ["1", 2, a, true];
print list;


// Prints 1, 2
def makeCounter() {
  var i = 0;
  def count() {
    i++;
    print i;
  }
  return count;
}
var counter = makeCounter();
counter();
counter();


// Prints out nth fibonacci number up to n=20
def fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}
for (var i = 0; i < 20; i++) {
  print fib(i);
}


// Prints out 5, 4, 3, 2, 1, 0
def recursion(x) {
  print x;
  if (x == 0) return x;
  return recursion(x - 1);
}
recursion(5);


// Prints 1 to 10
def add(a, b) {
  return a + b;
}
var a = 1;
for (var i = 0; i < 10; i++) {
  print add(a, i);
}


// Prints 3
def add(a, b) {
  return a + b;
}
print add(1, 2);


// Prints 3
def add(a, b) {
  print a + b;
}
add(1, 2);


// Prints 3
def t(a) {
  print a;
}
t(3);